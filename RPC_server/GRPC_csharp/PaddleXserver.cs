// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PaddleXserver.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Example {

  /// <summary>Holder for reflection information generated from PaddleXserver.proto</summary>
  public static partial class PaddleXserverReflection {

    #region Descriptor
    /// <summary>File descriptor for PaddleXserver.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PaddleXserverReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNQYWRkbGVYc2VydmVyLnByb3RvEgdleGFtcGxlIiAKDHJlc3F1ZXN0X21z",
            "ZxIQCghyZXNxdWVzdBgBIAEoCSIeCgtyZXNwb25lX21zZxIPCgdyZXNwb25l",
            "GAEgASgJIhcKBWltYWdlEg4KBl9pbWFnZRgBIAEoCSJGChBwYWRkbGV4X2lu",
            "aXRfY21kEhEKCW1vZGVsX2RpchgBIAEoCRIPCgd1c2VfZ3B1GAIgASgIEg4K",
            "BmdwdV9pZBgDIAEoCSIqChNwYWRkbGV4X2luaXRfcmVzdWx0EhMKC2luaXRf",
            "cmVzdWx0GAEgASgJIkkKEWNsc19pbnB1dHNfcmVzdWx0EhMKC2NhdGVnb3J5",
            "X2lkGAEgASgFEhAKCGNhdGVnb3J5GAIgASgJEg0KBXNjb3JlGAMgASgCIjAK",
            "EWRldF9pbnB1dHNfcmVzdWx0EhsKBWJveGVzGAEgAygLMgwuZXhhbXBsZS5i",
            "b3giXgoDYm94EhMKC2NhdGVnb3J5X2lkGAEgASgFEiEKBGJib3gYAiABKAsy",
            "Ey5leGFtcGxlLmNvb3JkaW5hdGUSDQoFc2NvcmUYAyABKAISEAoIY2F0ZWdv",
            "cnkYBCABKAkiRwoKY29vcmRpbmF0ZRIMCgR4bWluGAEgASgCEgwKBHltaW4Y",
            "AiABKAISDQoFd2lkdGgYAyABKAISDgoGaGVpZ2h0GAQgASgCIjwKFWRldF9z",
            "ZWdfaW5wdXRzX3Jlc3VsdBIjCglib3hlc19zZWcYASADKAsyEC5leGFtcGxl",
            "LmJveF9zZWcicQoHYm94X3NlZxITCgtjYXRlZ29yeV9pZBgBIAEoBRIhCgRi",
            "Ym94GAIgASgLMhMuZXhhbXBsZS5jb29yZGluYXRlEg0KBXNjb3JlGAMgASgC",
            "Eg0KBV9tYXNrGAQgASgJEhAKCGNhdGVnb3J5GAUgASgJImUKEXNlZ19pbnB1",
            "dHNfcmVzdWx0EhEKCWxhYmVsX21hcBgBIAEoCRImCgpfc2NvcmVfbWFwGAIg",
            "AygLMhIuZXhhbXBsZS5zY29yZV9tYXASFQoNc2V0X3RocmVzaG9sZBgDIAEo",
            "AiIaCglzY29yZV9tYXASDQoFdmFsdWUYASABKAkysAMKDVBhZGRsZVhzZXJ2",
            "ZXISOAoHY29ubmVjdBIVLmV4YW1wbGUucmVzcXVlc3RfbXNnGhQuZXhhbXBs",
            "ZS5yZXNwb25lX21zZyIAEkkKDHBhZGRsZXhfaW5pdBIZLmV4YW1wbGUucGFk",
            "ZGxleF9pbml0X2NtZBocLmV4YW1wbGUucGFkZGxleF9pbml0X3Jlc3VsdCIA",
            "EkMKE3BhZGRsZXhfcHJlZGljdF9jbHMSDi5leGFtcGxlLmltYWdlGhouZXhh",
            "bXBsZS5jbHNfaW5wdXRzX3Jlc3VsdCIAEkMKE3BhZGRsZXhfcHJlZGljdF9k",
            "ZXQSDi5leGFtcGxlLmltYWdlGhouZXhhbXBsZS5kZXRfaW5wdXRzX3Jlc3Vs",
            "dCIAEksKF3BhZGRsZXhfcHJlZGljdF9kZXRfc2VnEg4uZXhhbXBsZS5pbWFn",
            "ZRoeLmV4YW1wbGUuZGV0X3NlZ19pbnB1dHNfcmVzdWx0IgASQwoTcGFkZGxl",
            "eF9wcmVkaWN0X3NlZxIOLmV4YW1wbGUuaW1hZ2UaGi5leGFtcGxlLnNlZ19p",
            "bnB1dHNfcmVzdWx0IgBiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Example.resquest_msg), global::Example.resquest_msg.Parser, new[]{ "Resquest" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Example.respone_msg), global::Example.respone_msg.Parser, new[]{ "Respone" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Example.image), global::Example.image.Parser, new[]{ "Image" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Example.paddlex_init_cmd), global::Example.paddlex_init_cmd.Parser, new[]{ "ModelDir", "UseGpu", "GpuId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Example.paddlex_init_result), global::Example.paddlex_init_result.Parser, new[]{ "InitResult" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Example.cls_inputs_result), global::Example.cls_inputs_result.Parser, new[]{ "CategoryId", "Category", "Score" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Example.det_inputs_result), global::Example.det_inputs_result.Parser, new[]{ "Boxes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Example.box), global::Example.box.Parser, new[]{ "CategoryId", "Bbox", "Score", "Category" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Example.coordinate), global::Example.coordinate.Parser, new[]{ "Xmin", "Ymin", "Width", "Height" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Example.det_seg_inputs_result), global::Example.det_seg_inputs_result.Parser, new[]{ "BoxesSeg" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Example.box_seg), global::Example.box_seg.Parser, new[]{ "CategoryId", "Bbox", "Score", "Mask", "Category" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Example.seg_inputs_result), global::Example.seg_inputs_result.Parser, new[]{ "LabelMap", "ScoreMap", "SetThreshold" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Example.score_map), global::Example.score_map.Parser, new[]{ "Value" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class resquest_msg : pb::IMessage<resquest_msg> {
    private static readonly pb::MessageParser<resquest_msg> _parser = new pb::MessageParser<resquest_msg>(() => new resquest_msg());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<resquest_msg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Example.PaddleXserverReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public resquest_msg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public resquest_msg(resquest_msg other) : this() {
      resquest_ = other.resquest_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public resquest_msg Clone() {
      return new resquest_msg(this);
    }

    /// <summary>Field number for the "resquest" field.</summary>
    public const int ResquestFieldNumber = 1;
    private string resquest_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Resquest {
      get { return resquest_; }
      set {
        resquest_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as resquest_msg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(resquest_msg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Resquest != other.Resquest) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Resquest.Length != 0) hash ^= Resquest.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Resquest.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Resquest);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Resquest.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Resquest);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(resquest_msg other) {
      if (other == null) {
        return;
      }
      if (other.Resquest.Length != 0) {
        Resquest = other.Resquest;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Resquest = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class respone_msg : pb::IMessage<respone_msg> {
    private static readonly pb::MessageParser<respone_msg> _parser = new pb::MessageParser<respone_msg>(() => new respone_msg());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<respone_msg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Example.PaddleXserverReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public respone_msg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public respone_msg(respone_msg other) : this() {
      respone_ = other.respone_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public respone_msg Clone() {
      return new respone_msg(this);
    }

    /// <summary>Field number for the "respone" field.</summary>
    public const int ResponeFieldNumber = 1;
    private string respone_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Respone {
      get { return respone_; }
      set {
        respone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as respone_msg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(respone_msg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Respone != other.Respone) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Respone.Length != 0) hash ^= Respone.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Respone.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Respone);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Respone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Respone);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(respone_msg other) {
      if (other == null) {
        return;
      }
      if (other.Respone.Length != 0) {
        Respone = other.Respone;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Respone = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 图片
  /// </summary>
  public sealed partial class image : pb::IMessage<image> {
    private static readonly pb::MessageParser<image> _parser = new pb::MessageParser<image>(() => new image());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<image> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Example.PaddleXserverReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public image() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public image(image other) : this() {
      Image_ = other.Image_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public image Clone() {
      return new image(this);
    }

    /// <summary>Field number for the "_image" field.</summary>
    public const int ImageFieldNumber = 1;
    private string Image_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Image {
      get { return Image_; }
      set {
        Image_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as image);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(image other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Image != other.Image) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Image.Length != 0) hash ^= Image.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Image.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Image);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Image.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Image);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(image other) {
      if (other == null) {
        return;
      }
      if (other.Image.Length != 0) {
        Image = other.Image;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Image = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 加载模型req
  /// </summary>
  public sealed partial class paddlex_init_cmd : pb::IMessage<paddlex_init_cmd> {
    private static readonly pb::MessageParser<paddlex_init_cmd> _parser = new pb::MessageParser<paddlex_init_cmd>(() => new paddlex_init_cmd());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<paddlex_init_cmd> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Example.PaddleXserverReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public paddlex_init_cmd() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public paddlex_init_cmd(paddlex_init_cmd other) : this() {
      modelDir_ = other.modelDir_;
      useGpu_ = other.useGpu_;
      gpuId_ = other.gpuId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public paddlex_init_cmd Clone() {
      return new paddlex_init_cmd(this);
    }

    /// <summary>Field number for the "model_dir" field.</summary>
    public const int ModelDirFieldNumber = 1;
    private string modelDir_ = "";
    /// <summary>
    /// 模型目录
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelDir {
      get { return modelDir_; }
      set {
        modelDir_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "use_gpu" field.</summary>
    public const int UseGpuFieldNumber = 2;
    private bool useGpu_;
    /// <summary>
    /// 是否使用gpu
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UseGpu {
      get { return useGpu_; }
      set {
        useGpu_ = value;
      }
    }

    /// <summary>Field number for the "gpu_id" field.</summary>
    public const int GpuIdFieldNumber = 3;
    private string gpuId_ = "";
    /// <summary>
    /// gpu_id  暂时就用1个gpu吧
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GpuId {
      get { return gpuId_; }
      set {
        gpuId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as paddlex_init_cmd);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(paddlex_init_cmd other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ModelDir != other.ModelDir) return false;
      if (UseGpu != other.UseGpu) return false;
      if (GpuId != other.GpuId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ModelDir.Length != 0) hash ^= ModelDir.GetHashCode();
      if (UseGpu != false) hash ^= UseGpu.GetHashCode();
      if (GpuId.Length != 0) hash ^= GpuId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ModelDir.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ModelDir);
      }
      if (UseGpu != false) {
        output.WriteRawTag(16);
        output.WriteBool(UseGpu);
      }
      if (GpuId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(GpuId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ModelDir.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelDir);
      }
      if (UseGpu != false) {
        size += 1 + 1;
      }
      if (GpuId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GpuId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(paddlex_init_cmd other) {
      if (other == null) {
        return;
      }
      if (other.ModelDir.Length != 0) {
        ModelDir = other.ModelDir;
      }
      if (other.UseGpu != false) {
        UseGpu = other.UseGpu;
      }
      if (other.GpuId.Length != 0) {
        GpuId = other.GpuId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ModelDir = input.ReadString();
            break;
          }
          case 16: {
            UseGpu = input.ReadBool();
            break;
          }
          case 26: {
            GpuId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 加载模型rep
  /// </summary>
  public sealed partial class paddlex_init_result : pb::IMessage<paddlex_init_result> {
    private static readonly pb::MessageParser<paddlex_init_result> _parser = new pb::MessageParser<paddlex_init_result>(() => new paddlex_init_result());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<paddlex_init_result> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Example.PaddleXserverReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public paddlex_init_result() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public paddlex_init_result(paddlex_init_result other) : this() {
      initResult_ = other.initResult_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public paddlex_init_result Clone() {
      return new paddlex_init_result(this);
    }

    /// <summary>Field number for the "init_result" field.</summary>
    public const int InitResultFieldNumber = 1;
    private string initResult_ = "";
    /// <summary>
    /// 加载模型结果
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InitResult {
      get { return initResult_; }
      set {
        initResult_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as paddlex_init_result);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(paddlex_init_result other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InitResult != other.InitResult) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InitResult.Length != 0) hash ^= InitResult.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InitResult.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(InitResult);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InitResult.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InitResult);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(paddlex_init_result other) {
      if (other == null) {
        return;
      }
      if (other.InitResult.Length != 0) {
        InitResult = other.InitResult;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            InitResult = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 分类结果传出
  /// </summary>
  public sealed partial class cls_inputs_result : pb::IMessage<cls_inputs_result> {
    private static readonly pb::MessageParser<cls_inputs_result> _parser = new pb::MessageParser<cls_inputs_result>(() => new cls_inputs_result());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<cls_inputs_result> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Example.PaddleXserverReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public cls_inputs_result() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public cls_inputs_result(cls_inputs_result other) : this() {
      categoryId_ = other.categoryId_;
      category_ = other.category_;
      score_ = other.score_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public cls_inputs_result Clone() {
      return new cls_inputs_result(this);
    }

    /// <summary>Field number for the "category_id" field.</summary>
    public const int CategoryIdFieldNumber = 1;
    private int categoryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CategoryId {
      get { return categoryId_; }
      set {
        categoryId_ = value;
      }
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 2;
    private string category_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Category {
      get { return category_; }
      set {
        category_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 3;
    private float score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as cls_inputs_result);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(cls_inputs_result other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CategoryId != other.CategoryId) return false;
      if (Category != other.Category) return false;
      if (Score != other.Score) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CategoryId != 0) hash ^= CategoryId.GetHashCode();
      if (Category.Length != 0) hash ^= Category.GetHashCode();
      if (Score != 0F) hash ^= Score.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CategoryId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CategoryId);
      }
      if (Category.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Category);
      }
      if (Score != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Score);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CategoryId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CategoryId);
      }
      if (Category.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Category);
      }
      if (Score != 0F) {
        size += 1 + 4;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(cls_inputs_result other) {
      if (other == null) {
        return;
      }
      if (other.CategoryId != 0) {
        CategoryId = other.CategoryId;
      }
      if (other.Category.Length != 0) {
        Category = other.Category;
      }
      if (other.Score != 0F) {
        Score = other.Score;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            CategoryId = input.ReadInt32();
            break;
          }
          case 18: {
            Category = input.ReadString();
            break;
          }
          case 29: {
            Score = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 目标检测,实例分割结果输出
  /// </summary>
  public sealed partial class det_inputs_result : pb::IMessage<det_inputs_result> {
    private static readonly pb::MessageParser<det_inputs_result> _parser = new pb::MessageParser<det_inputs_result>(() => new det_inputs_result());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<det_inputs_result> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Example.PaddleXserverReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public det_inputs_result() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public det_inputs_result(det_inputs_result other) : this() {
      boxes_ = other.boxes_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public det_inputs_result Clone() {
      return new det_inputs_result(this);
    }

    /// <summary>Field number for the "boxes" field.</summary>
    public const int BoxesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Example.box> _repeated_boxes_codec
        = pb::FieldCodec.ForMessage(10, global::Example.box.Parser);
    private readonly pbc::RepeatedField<global::Example.box> boxes_ = new pbc::RepeatedField<global::Example.box>();
    /// <summary>
    /// string det_img = 1;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Example.box> Boxes {
      get { return boxes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as det_inputs_result);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(det_inputs_result other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!boxes_.Equals(other.boxes_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= boxes_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      boxes_.WriteTo(output, _repeated_boxes_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += boxes_.CalculateSize(_repeated_boxes_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(det_inputs_result other) {
      if (other == null) {
        return;
      }
      boxes_.Add(other.boxes_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            boxes_.AddEntriesFrom(input, _repeated_boxes_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 目标box
  /// </summary>
  public sealed partial class box : pb::IMessage<box> {
    private static readonly pb::MessageParser<box> _parser = new pb::MessageParser<box>(() => new box());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<box> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Example.PaddleXserverReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public box() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public box(box other) : this() {
      categoryId_ = other.categoryId_;
      Bbox = other.bbox_ != null ? other.Bbox.Clone() : null;
      score_ = other.score_;
      category_ = other.category_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public box Clone() {
      return new box(this);
    }

    /// <summary>Field number for the "category_id" field.</summary>
    public const int CategoryIdFieldNumber = 1;
    private int categoryId_;
    /// <summary>
    /// 类别id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CategoryId {
      get { return categoryId_; }
      set {
        categoryId_ = value;
      }
    }

    /// <summary>Field number for the "bbox" field.</summary>
    public const int BboxFieldNumber = 2;
    private global::Example.coordinate bbox_;
    /// <summary>
    /// 4个元素值，表示xmin, ymin, width, height
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Example.coordinate Bbox {
      get { return bbox_; }
      set {
        bbox_ = value;
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 3;
    private float score_;
    /// <summary>
    /// 置信度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 4;
    private string category_ = "";
    /// <summary>
    /// 类别
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Category {
      get { return category_; }
      set {
        category_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as box);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(box other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CategoryId != other.CategoryId) return false;
      if (!object.Equals(Bbox, other.Bbox)) return false;
      if (Score != other.Score) return false;
      if (Category != other.Category) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CategoryId != 0) hash ^= CategoryId.GetHashCode();
      if (bbox_ != null) hash ^= Bbox.GetHashCode();
      if (Score != 0F) hash ^= Score.GetHashCode();
      if (Category.Length != 0) hash ^= Category.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CategoryId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CategoryId);
      }
      if (bbox_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Bbox);
      }
      if (Score != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Score);
      }
      if (Category.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Category);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CategoryId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CategoryId);
      }
      if (bbox_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bbox);
      }
      if (Score != 0F) {
        size += 1 + 4;
      }
      if (Category.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Category);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(box other) {
      if (other == null) {
        return;
      }
      if (other.CategoryId != 0) {
        CategoryId = other.CategoryId;
      }
      if (other.bbox_ != null) {
        if (bbox_ == null) {
          bbox_ = new global::Example.coordinate();
        }
        Bbox.MergeFrom(other.Bbox);
      }
      if (other.Score != 0F) {
        Score = other.Score;
      }
      if (other.Category.Length != 0) {
        Category = other.Category;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            CategoryId = input.ReadInt32();
            break;
          }
          case 18: {
            if (bbox_ == null) {
              bbox_ = new global::Example.coordinate();
            }
            input.ReadMessage(bbox_);
            break;
          }
          case 29: {
            Score = input.ReadFloat();
            break;
          }
          case 34: {
            Category = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// boxes - coordinate
  /// </summary>
  public sealed partial class coordinate : pb::IMessage<coordinate> {
    private static readonly pb::MessageParser<coordinate> _parser = new pb::MessageParser<coordinate>(() => new coordinate());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<coordinate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Example.PaddleXserverReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public coordinate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public coordinate(coordinate other) : this() {
      xmin_ = other.xmin_;
      ymin_ = other.ymin_;
      width_ = other.width_;
      height_ = other.height_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public coordinate Clone() {
      return new coordinate(this);
    }

    /// <summary>Field number for the "xmin" field.</summary>
    public const int XminFieldNumber = 1;
    private float xmin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Xmin {
      get { return xmin_; }
      set {
        xmin_ = value;
      }
    }

    /// <summary>Field number for the "ymin" field.</summary>
    public const int YminFieldNumber = 2;
    private float ymin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Ymin {
      get { return ymin_; }
      set {
        ymin_ = value;
      }
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 3;
    private float width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Width {
      get { return width_; }
      set {
        width_ = value;
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 4;
    private float height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as coordinate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(coordinate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Xmin != other.Xmin) return false;
      if (Ymin != other.Ymin) return false;
      if (Width != other.Width) return false;
      if (Height != other.Height) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Xmin != 0F) hash ^= Xmin.GetHashCode();
      if (Ymin != 0F) hash ^= Ymin.GetHashCode();
      if (Width != 0F) hash ^= Width.GetHashCode();
      if (Height != 0F) hash ^= Height.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Xmin != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Xmin);
      }
      if (Ymin != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Ymin);
      }
      if (Width != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Width);
      }
      if (Height != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Height);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Xmin != 0F) {
        size += 1 + 4;
      }
      if (Ymin != 0F) {
        size += 1 + 4;
      }
      if (Width != 0F) {
        size += 1 + 4;
      }
      if (Height != 0F) {
        size += 1 + 4;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(coordinate other) {
      if (other == null) {
        return;
      }
      if (other.Xmin != 0F) {
        Xmin = other.Xmin;
      }
      if (other.Ymin != 0F) {
        Ymin = other.Ymin;
      }
      if (other.Width != 0F) {
        Width = other.Width;
      }
      if (other.Height != 0F) {
        Height = other.Height;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 13: {
            Xmin = input.ReadFloat();
            break;
          }
          case 21: {
            Ymin = input.ReadFloat();
            break;
          }
          case 29: {
            Width = input.ReadFloat();
            break;
          }
          case 37: {
            Height = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class det_seg_inputs_result : pb::IMessage<det_seg_inputs_result> {
    private static readonly pb::MessageParser<det_seg_inputs_result> _parser = new pb::MessageParser<det_seg_inputs_result>(() => new det_seg_inputs_result());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<det_seg_inputs_result> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Example.PaddleXserverReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public det_seg_inputs_result() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public det_seg_inputs_result(det_seg_inputs_result other) : this() {
      boxesSeg_ = other.boxesSeg_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public det_seg_inputs_result Clone() {
      return new det_seg_inputs_result(this);
    }

    /// <summary>Field number for the "boxes_seg" field.</summary>
    public const int BoxesSegFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Example.box_seg> _repeated_boxesSeg_codec
        = pb::FieldCodec.ForMessage(10, global::Example.box_seg.Parser);
    private readonly pbc::RepeatedField<global::Example.box_seg> boxesSeg_ = new pbc::RepeatedField<global::Example.box_seg>();
    /// <summary>
    /// string det_img = 1;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Example.box_seg> BoxesSeg {
      get { return boxesSeg_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as det_seg_inputs_result);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(det_seg_inputs_result other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!boxesSeg_.Equals(other.boxesSeg_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= boxesSeg_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      boxesSeg_.WriteTo(output, _repeated_boxesSeg_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += boxesSeg_.CalculateSize(_repeated_boxesSeg_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(det_seg_inputs_result other) {
      if (other == null) {
        return;
      }
      boxesSeg_.Add(other.boxesSeg_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            boxesSeg_.AddEntriesFrom(input, _repeated_boxesSeg_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 目标box
  /// </summary>
  public sealed partial class box_seg : pb::IMessage<box_seg> {
    private static readonly pb::MessageParser<box_seg> _parser = new pb::MessageParser<box_seg>(() => new box_seg());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<box_seg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Example.PaddleXserverReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public box_seg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public box_seg(box_seg other) : this() {
      categoryId_ = other.categoryId_;
      Bbox = other.bbox_ != null ? other.Bbox.Clone() : null;
      score_ = other.score_;
      Mask_ = other.Mask_;
      category_ = other.category_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public box_seg Clone() {
      return new box_seg(this);
    }

    /// <summary>Field number for the "category_id" field.</summary>
    public const int CategoryIdFieldNumber = 1;
    private int categoryId_;
    /// <summary>
    /// 类别id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CategoryId {
      get { return categoryId_; }
      set {
        categoryId_ = value;
      }
    }

    /// <summary>Field number for the "bbox" field.</summary>
    public const int BboxFieldNumber = 2;
    private global::Example.coordinate bbox_;
    /// <summary>
    /// 同上面的
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Example.coordinate Bbox {
      get { return bbox_; }
      set {
        bbox_ = value;
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 3;
    private float score_;
    /// <summary>
    /// 置信度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "_mask" field.</summary>
    public const int MaskFieldNumber = 4;
    private string Mask_ = "";
    /// <summary>
    /// 分割结果的mask
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mask {
      get { return Mask_; }
      set {
        Mask_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 5;
    private string category_ = "";
    /// <summary>
    /// 类别
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Category {
      get { return category_; }
      set {
        category_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as box_seg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(box_seg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CategoryId != other.CategoryId) return false;
      if (!object.Equals(Bbox, other.Bbox)) return false;
      if (Score != other.Score) return false;
      if (Mask != other.Mask) return false;
      if (Category != other.Category) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CategoryId != 0) hash ^= CategoryId.GetHashCode();
      if (bbox_ != null) hash ^= Bbox.GetHashCode();
      if (Score != 0F) hash ^= Score.GetHashCode();
      if (Mask.Length != 0) hash ^= Mask.GetHashCode();
      if (Category.Length != 0) hash ^= Category.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CategoryId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CategoryId);
      }
      if (bbox_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Bbox);
      }
      if (Score != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Score);
      }
      if (Mask.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Mask);
      }
      if (Category.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Category);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CategoryId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CategoryId);
      }
      if (bbox_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bbox);
      }
      if (Score != 0F) {
        size += 1 + 4;
      }
      if (Mask.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mask);
      }
      if (Category.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Category);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(box_seg other) {
      if (other == null) {
        return;
      }
      if (other.CategoryId != 0) {
        CategoryId = other.CategoryId;
      }
      if (other.bbox_ != null) {
        if (bbox_ == null) {
          bbox_ = new global::Example.coordinate();
        }
        Bbox.MergeFrom(other.Bbox);
      }
      if (other.Score != 0F) {
        Score = other.Score;
      }
      if (other.Mask.Length != 0) {
        Mask = other.Mask;
      }
      if (other.Category.Length != 0) {
        Category = other.Category;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            CategoryId = input.ReadInt32();
            break;
          }
          case 18: {
            if (bbox_ == null) {
              bbox_ = new global::Example.coordinate();
            }
            input.ReadMessage(bbox_);
            break;
          }
          case 29: {
            Score = input.ReadFloat();
            break;
          }
          case 34: {
            Mask = input.ReadString();
            break;
          }
          case 42: {
            Category = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 语义分割,只有两值
  /// </summary>
  public sealed partial class seg_inputs_result : pb::IMessage<seg_inputs_result> {
    private static readonly pb::MessageParser<seg_inputs_result> _parser = new pb::MessageParser<seg_inputs_result>(() => new seg_inputs_result());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<seg_inputs_result> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Example.PaddleXserverReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public seg_inputs_result() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public seg_inputs_result(seg_inputs_result other) : this() {
      labelMap_ = other.labelMap_;
      ScoreMap_ = other.ScoreMap_.Clone();
      setThreshold_ = other.setThreshold_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public seg_inputs_result Clone() {
      return new seg_inputs_result(this);
    }

    /// <summary>Field number for the "label_map" field.</summary>
    public const int LabelMapFieldNumber = 1;
    private string labelMap_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LabelMap {
      get { return labelMap_; }
      set {
        labelMap_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "_score_map" field.</summary>
    public const int ScoreMapFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Example.score_map> _repeated_ScoreMap_codec
        = pb::FieldCodec.ForMessage(18, global::Example.score_map.Parser);
    private readonly pbc::RepeatedField<global::Example.score_map> ScoreMap_ = new pbc::RepeatedField<global::Example.score_map>();
    /// <summary>
    /// 个数等于num_class
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Example.score_map> ScoreMap {
      get { return ScoreMap_; }
    }

    /// <summary>Field number for the "set_threshold" field.</summary>
    public const int SetThresholdFieldNumber = 3;
    private float setThreshold_;
    /// <summary>
    /// 配置文件设置的阀值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float SetThreshold {
      get { return setThreshold_; }
      set {
        setThreshold_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as seg_inputs_result);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(seg_inputs_result other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LabelMap != other.LabelMap) return false;
      if(!ScoreMap_.Equals(other.ScoreMap_)) return false;
      if (SetThreshold != other.SetThreshold) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LabelMap.Length != 0) hash ^= LabelMap.GetHashCode();
      hash ^= ScoreMap_.GetHashCode();
      if (SetThreshold != 0F) hash ^= SetThreshold.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LabelMap.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LabelMap);
      }
      ScoreMap_.WriteTo(output, _repeated_ScoreMap_codec);
      if (SetThreshold != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(SetThreshold);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LabelMap.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LabelMap);
      }
      size += ScoreMap_.CalculateSize(_repeated_ScoreMap_codec);
      if (SetThreshold != 0F) {
        size += 1 + 4;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(seg_inputs_result other) {
      if (other == null) {
        return;
      }
      if (other.LabelMap.Length != 0) {
        LabelMap = other.LabelMap;
      }
      ScoreMap_.Add(other.ScoreMap_);
      if (other.SetThreshold != 0F) {
        SetThreshold = other.SetThreshold;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            LabelMap = input.ReadString();
            break;
          }
          case 18: {
            ScoreMap_.AddEntriesFrom(input, _repeated_ScoreMap_codec);
            break;
          }
          case 29: {
            SetThreshold = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class score_map : pb::IMessage<score_map> {
    private static readonly pb::MessageParser<score_map> _parser = new pb::MessageParser<score_map>(() => new score_map());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<score_map> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Example.PaddleXserverReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public score_map() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public score_map(score_map other) : this() {
      value_ = other.value_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public score_map Clone() {
      return new score_map(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as score_map);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(score_map other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Value);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(score_map other) {
      if (other == null) {
        return;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
